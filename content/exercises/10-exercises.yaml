- title: "Создание индексов для оптимизации запросов"
  description_md: |
    # Создание индексов для оптимизации запросов
    
    В этом упражнении вы научитесь создавать индексы для оптимизации запросов.
    
    ## База данных
    
    У вас есть база данных интернет-магазина с таблицами:
    
    ```sql
    CREATE TABLE customers (
      id INTEGER PRIMARY KEY,
      first_name TEXT,
      last_name TEXT,
      email TEXT,
      city TEXT,
      country TEXT
    );
    
    CREATE TABLE orders (
      id INTEGER PRIMARY KEY,
      customer_id INTEGER,
      order_date DATE,
      total_amount NUMERIC,
      status TEXT,
      FOREIGN KEY (customer_id) REFERENCES customers(id)
    );
    ```
    
    ## Задание
    
    Предположим, что в вашем приложении часто выполняются следующие запросы:
    
    1. Поиск клиентов по электронной почте
    2. Поиск заказов по ID клиента и дате
    3. Поиск заказов за определенный период
    
    Напишите SQL-запросы для создания индексов, которые ускорят выполнение этих запросов.
  init_sql: |
    -- Создаём таблицу customers
    CREATE TABLE customers (
      id INTEGER PRIMARY KEY,
      first_name TEXT,
      last_name TEXT,
      email TEXT,
      city TEXT,
      country TEXT
    );
    
    -- Создаём таблицу orders
    CREATE TABLE orders (
      id INTEGER PRIMARY KEY,
      customer_id INTEGER,
      order_date DATE,
      total_amount NUMERIC,
      status TEXT,
      FOREIGN KEY (customer_id) REFERENCES customers(id)
    );
  expected_sql: |
    -- Индекс для поиска клиентов по электронной почте
    CREATE UNIQUE INDEX idx_customers_email ON customers(email);
    
    -- Индекс для поиска заказов по ID клиента и дате
    CREATE INDEX idx_orders_customer_date ON orders(customer_id, order_date);
    
    -- Индекс для поиска заказов за определенный период
    CREATE INDEX idx_orders_date ON orders(order_date);
  order: 1
  lesson_id: 10

- title: "Анализ плана выполнения запроса"
  description_md: |
    # Анализ плана выполнения запроса
    
    В этом упражнении вы научитесь использовать оператор EXPLAIN для анализа плана выполнения запроса.
    
    ## База данных
    
    У вас есть база данных интернет-магазина с таблицами `customers` и `orders` (см. предыдущее упражнение).
    
    ## Задание
    
    Напишите запрос с оператором EXPLAIN, чтобы проанализировать план выполнения следующего запроса:
    
    ```sql
    SELECT c.id, c.first_name, c.last_name, COUNT(o.id) AS order_count
    FROM customers c
    LEFT JOIN orders o ON c.id = o.customer_id
    WHERE c.country = 'Россия'
    GROUP BY c.id, c.first_name, c.last_name
    ORDER BY order_count DESC
    LIMIT 10;
    ```
  init_sql: |
    -- Создаём таблицу customers
    CREATE TABLE customers (
      id INTEGER PRIMARY KEY,
      first_name TEXT,
      last_name TEXT,
      email TEXT,
      city TEXT,
      country TEXT
    );
    
    -- Создаём таблицу orders
    CREATE TABLE orders (
      id INTEGER PRIMARY KEY,
      customer_id INTEGER,
      order_date DATE,
      total_amount NUMERIC,
      status TEXT,
      FOREIGN KEY (customer_id) REFERENCES customers(id)
    );
  expected_sql: |
    EXPLAIN
    SELECT c.id, c.first_name, c.last_name, COUNT(o.id) AS order_count
    FROM customers c
    LEFT JOIN orders o ON c.id = o.customer_id
    WHERE c.country = 'Россия'
    GROUP BY c.id, c.first_name, c.last_name
    ORDER BY order_count DESC
    LIMIT 10;
  order: 2
  lesson_id: 10

- title: "Создание составного и покрывающего индекса"
  description_md: |
    # Создание составного и покрывающего индекса
    
    В этом упражнении вы научитесь создавать составные и покрывающие индексы для оптимизации сложных запросов.
    
    ## База данных
    
    У вас есть таблица `products` с информацией о товарах:
    
    ```sql
    CREATE TABLE products (
      id INTEGER PRIMARY KEY,
      name TEXT,
      category_id INTEGER,
      supplier_id INTEGER,
      price NUMERIC,
      stock_quantity INTEGER,
      created_at TIMESTAMP
    );
    ```
    
    ## Задание
    
    Предположим, что в вашем приложении часто выполняется следующий запрос:
    
    ```sql
    SELECT name, price
    FROM products
    WHERE category_id = 5 AND supplier_id = 10
    ORDER BY price DESC
    LIMIT 20;
    ```
    
    Напишите SQL-запрос для создания индекса, который ускорит выполнение этого запроса. 
    Индекс должен быть:
    
    1. Составным (учитывать все условия в WHERE)
    2. Покрывающим (содержать все столбцы, запрашиваемые в SELECT)
    3. Учитывать сортировку по убыванию цены
  init_sql: |
    -- Создаём таблицу products
    CREATE TABLE products (
      id INTEGER PRIMARY KEY,
      name TEXT,
      category_id INTEGER,
      supplier_id INTEGER,
      price NUMERIC,
      stock_quantity INTEGER,
      created_at TIMESTAMP
    );
  expected_sql: |
    CREATE INDEX idx_products_cat_supp_price_name ON products(category_id, supplier_id, price DESC, name);
  order: 3
  lesson_id: 10